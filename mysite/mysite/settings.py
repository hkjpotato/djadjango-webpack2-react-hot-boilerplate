"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'z@*lz%d)0)a=9%*8p76r!b-f3s*&dff@=&^n!=_n&v4pj!x+tg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'app1',
    'app2',
    'webpack_loader', #webpack_loader for webpack integration
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_URL = '/static/' #staticfiles app uses this to configure the urlpatterns

# ADDITIONAL SETUP
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'assets'), 
    # We do this so that django's collectstatic copies or our bundles to the STATIC_ROOT or syncs them to whatever storage we use.
    # AND also add it to the static file deliever during development of django (staticfiles view function)
] 
# STATICFILES_DIRS is the list of folder where Django will search for additional static files, in addition to each static folder of each app installed.
'''
Dont be confused by development/production modes in webpack and django.

production in webpack(frontend) does not mean production in django(backend)

If Debug=True(django development mode), django will serve files in STATICFILES_DIRS
HOWEVER, 
1: In webpack development mode (running WDS): 
   1.1: if WDS is on, we WON'T rely on django to serve those files(assets/bundles/*)! Instead, we use WDS & HMR to serve those files!
2: In webpack production mode (WDS is off, bundles generated in dist):
   2.1: django is still in development(Debug=True). django can serve those files(assets/dist/*).
   2.2: django is in production(Debug=False), then STATICFILES_DIRS is only used by collectstatic to copy those file to your static files root
   (and serve by your static file server).

To differentiate, I put a flag WDS_ON here
'''

# WEBPACK integration
WDS_ON = True

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'bundles/', #if you don't specify publicPath in webpack.config, django will load your bundles from this dir 
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'), #multiple bundle files
    }
}

'''when you not not running WDS and bundles are built in assest/dist'''
if not WDS_ON:
    WEBPACK_LOADER['DEFAULT'].update({
        'BUNDLE_DIR_NAME': 'dist/', #if you don't specify publicPath in webpack.config, django will load your bundles from this dir 
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats-prod.json')
    })

# run python manage.py collectstatic and all static files will be collected to the root dir 
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')